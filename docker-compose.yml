services:

  db:
    image: postgres:latest
    container_name: videoflix_database
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init/:/docker-entrypoint-initdb.d/ 

  redis:
    image: redis:latest
    container_name: videoflix_redis
    volumes:
      - redis_data:/data

  web:
    build:
      context: .
      dockerfile: backend.Dockerfile
    env_file: .env
    container_name: videoflix_backend
    volumes:
      - .:/app
      - videoflix_media:/app/media
      - videoflix_static:/app/static
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
  
  test:
    build:
      context: .
      dockerfile: backend.test.Dockerfile 
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings_test
      - POSTGRES_DB=app_test
      - POSTGRES_USER=app_user
      - POSTGRES_PASSWORD=secret
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379/2
    command:
      - pytest
      - --disable-warnings
      - --maxfail=1
      - --cov=videoflix_backend
      - --cov-report=term-missing
      - --cov-report=xml


volumes:
  postgres_data:
  redis_data:
  videoflix_media:
  videoflix_static:
